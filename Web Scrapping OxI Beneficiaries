{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "51e31dea",
   "metadata": {},
   "source": [
    "# Búsqueda de beneficiarios - CUI\n",
    "\n",
    "Es necesario contar con el archivo del código y el archivo del CUI en el mismo directorio (o carpeta), para evitar errores."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "bf2440d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: selenium in c:\\users\\laptop\\anaconda3\\lib\\site-packages (4.8.0)\n",
      "Requirement already satisfied: certifi>=2021.10.8 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from selenium) (2022.9.14)\n",
      "Requirement already satisfied: urllib3[socks]~=1.26 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from selenium) (1.26.11)\n",
      "Requirement already satisfied: trio-websocket~=0.9 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from selenium) (0.9.2)\n",
      "Requirement already satisfied: trio~=0.17 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from selenium) (0.22.0)\n",
      "Requirement already satisfied: attrs>=19.2.0 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio~=0.17->selenium) (21.4.0)\n",
      "Requirement already satisfied: sniffio in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio~=0.17->selenium) (1.2.0)\n",
      "Requirement already satisfied: sortedcontainers in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio~=0.17->selenium) (2.4.0)\n",
      "Requirement already satisfied: exceptiongroup>=1.0.0rc9 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio~=0.17->selenium) (1.1.0)\n",
      "Requirement already satisfied: idna in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio~=0.17->selenium) (3.3)\n",
      "Requirement already satisfied: async-generator>=1.9 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio~=0.17->selenium) (1.10)\n",
      "Requirement already satisfied: cffi>=1.14 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio~=0.17->selenium) (1.15.1)\n",
      "Requirement already satisfied: outcome in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio~=0.17->selenium) (1.2.0)\n",
      "Requirement already satisfied: wsproto>=0.14 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from trio-websocket~=0.9->selenium) (1.2.0)\n",
      "Requirement already satisfied: PySocks!=1.5.7,<2.0,>=1.5.6 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from urllib3[socks]~=1.26->selenium) (1.7.1)\n",
      "Requirement already satisfied: pycparser in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from cffi>=1.14->trio~=0.17->selenium) (2.21)\n",
      "Requirement already satisfied: h11<1,>=0.9.0 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from wsproto>=0.14->trio-websocket~=0.9->selenium) (0.14.0)\n",
      "Requirement already satisfied: webdriver-manager in c:\\users\\laptop\\anaconda3\\lib\\site-packages (3.8.5)\n",
      "Requirement already satisfied: tqdm in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from webdriver-manager) (4.64.1)\n",
      "Requirement already satisfied: python-dotenv in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from webdriver-manager) (0.21.1)\n",
      "Requirement already satisfied: requests in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from webdriver-manager) (2.28.1)\n",
      "Requirement already satisfied: packaging in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from webdriver-manager) (21.3)\n",
      "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from packaging->webdriver-manager) (3.0.9)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from requests->webdriver-manager) (2022.9.14)\n",
      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from requests->webdriver-manager) (1.26.11)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from requests->webdriver-manager) (3.3)\n",
      "Requirement already satisfied: charset-normalizer<3,>=2 in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from requests->webdriver-manager) (2.0.4)\n",
      "Requirement already satisfied: colorama in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from tqdm->webdriver-manager) (0.4.5)\n",
      "Requirement already satisfied: xlrd in c:\\users\\laptop\\anaconda3\\lib\\site-packages (2.0.1)\n",
      "Requirement already satisfied: openpyxl in c:\\users\\laptop\\anaconda3\\lib\\site-packages (3.0.10)\n",
      "Requirement already satisfied: et_xmlfile in c:\\users\\laptop\\anaconda3\\lib\\site-packages (from openpyxl) (1.1.0)\n"
     ]
    }
   ],
   "source": [
    "!pip install selenium\n",
    "!pip install webdriver-manager\n",
    "!pip install xlrd\n",
    "!pip install openpyxl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5c9e20c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Libraries\n",
    "# ---\n",
    "# For scrape\n",
    "from selenium import webdriver\n",
    "from webdriver_manager.chrome import ChromeDriverManager\n",
    "\n",
    "# Options driver\n",
    "from selenium.webdriver.chrome.options import Options\n",
    "\n",
    "# For dataframes\n",
    "import pandas as pd\n",
    "from pandas import json_normalize\n",
    "\n",
    "# For simulate human behavior.\n",
    "import time\n",
    "from time import sleep\n",
    "import random\n",
    "from selenium.webdriver.common.by import By"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "81b60fab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "    div#notebook-container    { width: 95%; }\n",
       "    div#menubar-container     { width: 65%; }\n",
       "    div#maintoolbar-container { width: 99%; }a\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import display, HTML\n",
    "\n",
    "display(HTML(data=\"\"\"\n",
    "<style>\n",
    "    div#notebook-container    { width: 95%; }\n",
    "    div#menubar-container     { width: 65%; }\n",
    "    div#maintoolbar-container { width: 99%; }a\n",
    "</style>\n",
    "\"\"\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "9b533f0c",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Laptop\\AppData\\Local\\Temp\\ipykernel_14972\\3749960509.py:4: DeprecationWarning: executable_path has been deprecated, please pass in a Service object\n",
      "  driver = webdriver.Chrome(ChromeDriverManager().install(),options=options)\n"
     ]
    }
   ],
   "source": [
    "# Setting\n",
    "options= Options()\n",
    "options.add_argument(\"--start-maximized\")\n",
    "driver = webdriver.Chrome(ChromeDriverManager().install(),options=options)\n",
    "# we open our page\n",
    "driver.get(\"https://ofi5.mef.gob.pe/ssi/ssi/Index\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "e2953fcb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'C:\\\\Users\\\\Laptop\\\\Documents\\\\GitHub'"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "33c8ab84",
   "metadata": {},
   "outputs": [],
   "source": [
    "cui2=pd.read_excel(\"CUI.xlsx\")\n",
    "cui2.values.tolist()\n",
    "list_cui=cui2['CUI'].values.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "341a9a4d",
   "metadata": {},
   "outputs": [],
   "source": [
    "beneficiarios=[]\n",
    "for i in list_cui:\n",
    "    #Ubica la caja de texto para escribir el CUI\n",
    "    element = driver.find_element('xpath', '/html/body/form/div/div[1]/div[1]/div/table/tbody/tr[3]/td[1]/ul/li[1]/div/input' )\n",
    "    element.click()\n",
    "    \n",
    "    #Escribe el CUI\n",
    "    element.send_keys(f'{i}')\n",
    "    #Ubica el botón de la lupa para buscar\n",
    "    buscar = driver.find_element('xpath', '/html/body/form/div/div[1]/div[1]/div/table/tbody/tr[3]/td[1]/ul/li[1]/div/span/i')\n",
    "    buscar.click()\n",
    "    \n",
    "    #Le decimos que espera un tiempito (por si la página demora en cargar)\n",
    "    time.sleep(1)\n",
    "    \n",
    "    #Ubica la caja de texto y borra el contenido\n",
    "    driver.find_element('xpath', '/html/body/form/div/div[1]/div[1]/div/table/tbody/tr[3]/td[1]/ul/li[1]/div/input' ).clear()\n",
    "    \n",
    "    #Le decimos que espera un tiempito (por si la página demora en cargar)\n",
    "    time.sleep(1)\n",
    "    \n",
    "    #Identifica el número de \"Beneficiarios\"\n",
    "    searchBox = driver.find_element(By.ID,'td_benif')\n",
    "    beneficiarios.append(searchBox.text)\n",
    "    i=i+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "e32a21a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['33,267',\n",
       " '58,924',\n",
       " '19,815',\n",
       " '2,040',\n",
       " '50,482',\n",
       " '32,205',\n",
       " '30,702',\n",
       " '68,828',\n",
       " '0',\n",
       " '14,551',\n",
       " '0',\n",
       " '438,835',\n",
       " '664,018',\n",
       " '210,459',\n",
       " '4,643,989',\n",
       " '281,635',\n",
       " '2,022',\n",
       " '207,762',\n",
       " '89,230',\n",
       " '9,255',\n",
       " '0',\n",
       " '0',\n",
       " '68,455',\n",
       " '39,546',\n",
       " '903,905',\n",
       " '23,015',\n",
       " '3,696',\n",
       " '650,348',\n",
       " '8,656',\n",
       " '58,813',\n",
       " '12,250',\n",
       " '34,564',\n",
       " '33,726',\n",
       " '22,174',\n",
       " '4,706',\n",
       " '65,661',\n",
       " '76,789',\n",
       " '453,790',\n",
       " '0',\n",
       " '101,386',\n",
       " '0',\n",
       " '1,779',\n",
       " '0',\n",
       " '33,726',\n",
       " '0',\n",
       " '0',\n",
       " '5,736',\n",
       " '2,850',\n",
       " '18,157',\n",
       " '126,783',\n",
       " '10,998',\n",
       " '69,528',\n",
       " '90,293',\n",
       " '7,497',\n",
       " '16,253',\n",
       " '7,343',\n",
       " '22,889',\n",
       " '1,182',\n",
       " '92,475',\n",
       " '2,311',\n",
       " '341,332,331',\n",
       " '167,798',\n",
       " '181,687',\n",
       " '156,146',\n",
       " '65,593',\n",
       " '655,226',\n",
       " '33,401',\n",
       " '3,260',\n",
       " '13,242',\n",
       " '0',\n",
       " '1,830',\n",
       " '321,687',\n",
       " '73,352',\n",
       " '9,814',\n",
       " '803,848',\n",
       " '4,386',\n",
       " '7,407',\n",
       " '12,057',\n",
       " '2,709',\n",
       " '3,593',\n",
       " '119,744',\n",
       " '2,905',\n",
       " '10,083',\n",
       " '26,830',\n",
       " '38,538',\n",
       " '5,392',\n",
       " '5,791',\n",
       " '1,632',\n",
       " '4,980',\n",
       " '4,240',\n",
       " '58,688',\n",
       " '7,114',\n",
       " '11,322',\n",
       " '4,393',\n",
       " '8,926',\n",
       " '52,804',\n",
       " '33',\n",
       " '457,206',\n",
       " '10,269',\n",
       " '8,075',\n",
       " '2,907',\n",
       " '530',\n",
       " '2,029',\n",
       " '4,111',\n",
       " '0',\n",
       " '0',\n",
       " '134,578',\n",
       " '1,729',\n",
       " '1,718',\n",
       " '4,073',\n",
       " '221',\n",
       " '0',\n",
       " '525',\n",
       " '1,111',\n",
       " '3,375',\n",
       " '821,654',\n",
       " '0',\n",
       " '0',\n",
       " '3,338',\n",
       " '32,570',\n",
       " '11,633,292',\n",
       " '1,500',\n",
       " '0',\n",
       " '5,856',\n",
       " '3,553',\n",
       " '25,043',\n",
       " '540',\n",
       " '0',\n",
       " '22,890',\n",
       " '14,415',\n",
       " '2,854',\n",
       " '2,223',\n",
       " '9,717',\n",
       " '21,142,882',\n",
       " '3,055',\n",
       " '6,883',\n",
       " '0',\n",
       " '0',\n",
       " '0',\n",
       " '0',\n",
       " '49,555',\n",
       " '1,725',\n",
       " '51,103',\n",
       " '477,616',\n",
       " '0',\n",
       " '2,029',\n",
       " '6,110',\n",
       " '21,964',\n",
       " '0',\n",
       " '10,037',\n",
       " '0',\n",
       " '1,160',\n",
       " '0',\n",
       " '0',\n",
       " '20,089',\n",
       " '0',\n",
       " '33,168',\n",
       " '150,403',\n",
       " '1,774,820',\n",
       " '532,914',\n",
       " '0',\n",
       " '124,000',\n",
       " '43,060',\n",
       " '62,167',\n",
       " '359,560',\n",
       " '49,574',\n",
       " '10,872,249']"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "beneficiarios"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "cd6fbfda",
   "metadata": {},
   "outputs": [],
   "source": [
    "newbiz=[]\n",
    "for item in range(len(beneficiarios)):\n",
    "        beneficiarios[item] = float(beneficiarios[item].replace(',',''))\n",
    "        newbiz.append(beneficiarios[item])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "4c30541c",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         CUI  Beneficiarios\n",
      "0    2520925        33267.0\n",
      "1    2324684        58924.0\n",
      "2    2465771        19815.0\n",
      "3    2392986         2040.0\n",
      "4    2510644        50482.0\n",
      "..       ...            ...\n",
      "162  2250147        43060.0\n",
      "163  2429701        62167.0\n",
      "164  2250179       359560.0\n",
      "165  2265044        49574.0\n",
      "166  2253500     10872249.0\n",
      "\n",
      "[167 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "df = { 'CUI':list_cui, 'Beneficiarios':beneficiarios }\n",
    "Cui_Beneficiarios = pd.DataFrame( df )\n",
    "print(Cui_Beneficiarios)\n",
    "Cui_Beneficiarios.to_excel('cui_beneficiarios.xlsx',engine='xlsxwriter')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
